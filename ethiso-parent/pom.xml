<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.iso.ie</groupId>
	<artifactId>ethiso-parent</artifactId>
	<version>1.1.4-SNAPSHOT</version>

	<packaging>pom</packaging>

	<properties>

		<amqp.version>3.6.1</amqp.version>
		<apache.httpclient.version>4.5.2</apache.httpclient.version>
		<bouncy.castle.version>1.54</bouncy.castle.version>
		<commons.lang.version>3.4</commons.lang.version>
		<commons.io.version>2.5</commons.io.version>
		<hamcrest.version>1.3</hamcrest.version>
		<jackson.version>2.10.0.pr3</jackson.version>
		<junit.version>4.12</junit.version>
		<logback.version>1.1.7</logback.version>
		<mockito.version>1.9.5</mockito.version>
		<qpid.version>0.28</qpid.version>
		<slf.version>1.7.21</slf.version>
		<spark.version>2.7.2</spark.version>
		<vertx.version>3.2.1</vertx.version>

		<integration.test.pattern>**/*IntegrationTest.java</integration.test.pattern>

	</properties>

	<dependencyManagement>

		<dependencies>

			<dependency>
				<groupId>com.iso.ie</groupId>
				<artifactId>ethiso-api</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.iso.ie</groupId>
				<artifactId>ethiso-core</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.iso.ie</groupId>
				<artifactId>json-rpc-core</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.iso.ie</groupId>
				<artifactId>json-rpc-rabbitmq</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.iso.ie</groupId>
				<artifactId>json-rpc-vertx</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.iso.ie</groupId>
				<artifactId>json-rpc-http</artifactId>
				<version>${project.version}</version>
			</dependency>


			<dependency>
				<groupId>com.iso.ie</groupId>
				<artifactId>geth-docker</artifactId>
				<version>${project.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-xml</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<dependency>
				<groupId>com.rabbitmq</groupId>
				<artifactId>amqp-client</artifactId>
				<version>${amqp.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.qpid</groupId>
				<artifactId>qpid-broker</artifactId>
				<version>${qpid.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.sparkjava</groupId>
				<artifactId>spark-core</artifactId>
				<version>${spark.version}</version>
			</dependency>

			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-core</artifactId>
				<version>${vertx.version}</version>
			</dependency>

			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-unit</artifactId>
				<version>${vertx.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>${hamcrest.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.spotify</groupId>
				<artifactId>docker-client</artifactId>
				<version>3.5.12</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons.lang.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${bouncy.castle.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${apache.httpclient.version}</version>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<build>

		<plugins>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>copy-docker-files</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
							<outputDirectory>target/docker-tmp</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<excludes>
						<exclude>${integration.test.pattern}</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<includes>
						<include>${integration.test.pattern}</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>integration-test-verify</id>
						<phase>verify</phase>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.7.201606060606</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<!-- implementation is needed only for Maven 2 -->
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<limits>
										<!-- implementation is needed only for Maven 2 -->
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.0</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<pluginManagement>

			<plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<forceCreation>true</forceCreation>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.5.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.3</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<createDependencyReducedPom>false</createDependencyReducedPom>
								<!-- Exclude manifests when shading Bouncy Castle -->
								<filters>
									<filter>
										<artifact>*:*</artifact>
										<excludes>
											<exclude>META-INF/*.SF</exclude>
											<exclude>META-INF/*.DSA</exclude>
											<exclude>META-INF/*.RSA</exclude>
										</excludes>
									</filter>
								</filters>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.20.0</version>
					<extensions>true</extensions>
					<configuration>
						<verbose>true</verbose>
					</configuration>
					<executions>
						<execution>
							<id>docker-build</id>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
						<execution>
							<id>docker-start</id>
							<phase>pre-integration-test</phase>
							<configuration>
								<skip>${skipTests}</skip>
							</configuration>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>docker-stop</id>
							<phase>post-integration-test</phase>
							<configuration>
								<skip>${skipTests}</skip>
							</configuration>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>

		</pluginManagement>

	</build>

</project>
